package org.itstep;

import java.util.Scanner;

public class ForLoops {
    public static void main(String[] args) {
        /**
         * В цикле while три важнейших компонента цикла: вариант, продвижение и условие - находятся в разных местах кода,
         * которые могут значительно отстоять друг от друга.
         * Специальный цикл fo ( <инициализация>; <условие>; <продвижение>) { } позволяет все три компонента совместить
         *
         * Инициализация выполняется строго ДО начала цикла
         * Условие проверяется ПЕРЕД каждой итерацией
         * Проодвижение выполняется ПОСЛЕ каждой итерации и ДО проверки условия
         *
         * */
        //напишем программу, которая выводит на экран строку "Hello For!" десять раз
        if (false) {
            for (int cnt = 0; cnt != 10; ++cnt) { //всё в одной строке! И объявление счётчика, и условие продолжения, и продвижение!
                System.out.println("Hello For!");
            }
        }

        //перепишем программу, выводящую строку в обратном порядке, через цикл for
        if (false) {
            Scanner sc = new Scanner(System.in);
            String userString = sc.next();
            for (int pos = userString.length()-1; pos >=0; --pos) {
                System.out.print(userString.charAt(pos));
            }
        }

        //переменная, объявленная в цикле for видна только в теле этого цикла, потому имя может быть легко переиспользовано
        if (false) {
            //подсчитаем разность сумм цифр двух чисел
            Scanner sc = new Scanner(System.in);
            long numberA = sc.nextLong(), numberB = sc.nextLong();

            //Переменные суммы следует определить вне циклов!
            //Т.к. иначе значения суммы мы сможем использовать только внутри цикла.
            int sumA = 0, sumB = 0;

            for(long num = numberA; num != 0;  num /= 10) { //внимание(!) деление происходит в конце итерации
                sumA += num % 10;
            }
            //в этом цикле мы можем спокойно дать название внутренней переменной num
            for (long num = numberB; num != 0; num /= 10) {
                sumB += num % 10;
            }

            System.out.println(sumA - sumB);
        }

        //цикл for позволяет выполнять несколько выражений в блоках инициализации и продвижения
        //проверим, что строка читается слева направо и справа налево одинаково
        if (false) {
            Scanner sc = new Scanner(System.in);
            String userString = sc.next();

            boolean isPalindrom = true;
            for (int i = 0, j = userString.length()-1; j > i; --j, ++i) {
                if (userString.charAt(i) != userString.charAt(j))
                    isPalindrom = false;
            }

            System.out.println(isPalindrom?"Да":"Нет");
        }

        //возведение числа типа double в целую положительную степень
        if (true) {
            Scanner sc = new Scanner(System.in);
            double base = sc.nextDouble();
            int exp = sc.nextInt();

            double res;
            for (res = 1.; exp > 0; --exp)
                res *= base;

            System.out.println(res);
        }

        /**
         * Правила хорошего тона при работе с циклом for:
         * i)   Не изменяйте переменную(ные), которые учавствуют в блоке <продвижение>, в теле цикла
         * ii)  Не делайте "всё сразу" в блоке <продвижение>, располагайте в нём только необходимый код:
         *          int sum =0;
         *          for(long num = numberA; num != 0;  sum += num % 10, num /= 10);
         *          //суммирование цифры в аккумулятор не является частью продвижения,
         *          //следует разместить это действие в теле цикла
         *
         * iii) Не пишите цикл for, у которого отсутствует блок <продвижение>, испльзуйте while
         *          for (long num = number; 1 != num; <пустой блок продвижения>)
         *              num = 0 == num%2 ? num/2 : 3*num + 1;
         *
         * iV)  Не используйте цикл for для создания бесконечных циклов
         *
         * v)   Предпочитайте цикл for, если необходимо выполнить заранее известное кол-во действий:
         *          5 чисел запросить у пользователя;
         *          10 раз напечатеть строку;
         *          250 попыток сделать для связи с сервером.
         *
         * vi)  Предпочитайте цикл for, если обходите данные конечного размера:
         *          обратиться ко всем символам строки;
         *          разбить число на цифры;
         *          обратиться ко всем элементам массива.
         *
         * */
    }
}
